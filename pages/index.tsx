import { NextPage } from "next";
import Head from "next/head";
import LandingPageTemplate from "../templates/LandingPage/LandingPageTemplate";
import { Space_Grotesk } from "next/font/google";
import { useEffect, useState } from "react";
import {
  motion,
  useMotionValue,
  useTransform,
  useScroll,
  useMotionValueEvent,
} from "framer-motion";
import Image from "next/image";
import { useRouter } from "next/router";

import type { InferGetServerSidePropsType, GetServerSideProps } from 'next'
import ReactPlayer from "react-player";

const fontTitle = Space_Grotesk({ weight: "400", subsets: ["latin"] });
const font = Space_Grotesk({ weight: "300", subsets: ["latin"] });

type Video = {
  video: string
}


const Index = () => {


  const router = useRouter()
  const x = useMotionValue(0);
  const { scrollY } = useScroll();
  const y1 = useTransform(scrollY, [0, 2010], [0, 2010]);

  const [videos, setVideo] = useState<any>(null)
  const [isOpen, setIsOpen] = useState(false);
  const [textColor, setTextColor] = useState("text-[#F9F6EE]");


  useMotionValueEvent(scrollY, "change", (latest) => {
    if (latest >= 1000) setTextColor("text-black duration-500");
    else setTextColor("text-[#F9F6EE]");
  });

  return (
    <>
      <Head>
        <title>kkn</title>
        <meta name="description" content="Generated by Create Next Stack." />
      </Head>
      <div className="w-full h-[500vh]">
        <div className="absolute top-0 left-0 w-[100%] h-[100%] bg-black bg-opacity-20 z-0 "></div>
        <video
          src={require(`../public/video${Math.floor(Math.random() * 3) + 1
            }.mp4`)}
          // src={require(video.video)}
          autoPlay
          loop
          muted
          className="w-[100%] h-[100%] object-cover absolute"
        />
        {/* <div className="w-[100%] h-[100%] object-cover absolute">
        {videos}
        </div> */}
        <motion.div
          className={`xl:pt-10 xl:pl-10 md:pt-8 md:pl-8 pt-3 pl-3 top-0 z-20 relative md:sticky xl:sticky ${textColor}`}
          style={{ x }}
          id="title"
        >
          {!isOpen ? (
            <>
              <h1
                className={`xl:text-9xl text-7xl md:text-9xl ml-1 xl:ml-0 md:xl-0 ${fontTitle.className}`}
              >
                KKN
              </h1>
              <h1
                className={`xl:text-2xl text-sm md:text-xl pl-2 md:pl-3 ${font.className}`}
              >
                Kopi Kaya Nusantara
              </h1>
            </>
          ) : (
            ""
          )}
        </motion.div>
        <motion.div
          className={`top-[35%] right-0 z-20 absolute text-white p-5 xl:p-10 md:p-10 text-left xl:text-7xl text-4xl md:text-6xl ${fontTitle.className}`}
        >
          {!isOpen ? (
            <>
              <h1>GAYO</h1>
              <h1>BOLD</h1>
              <h1>RICH</h1>
            </>
          ) : (
            ""
          )}
        </motion.div>
        {isOpen ? (
          <>
            <div
              className="absolute top-0 right-0 z-20 mt-10 lg:p-10 xl:p-10 xl:mr-10 lg:mr-10 hover:cursor-pointer"
              onClick={(e) => {
                e.preventDefault();
                setIsOpen(false);
              }}
            >
              <svg
                xmlns="http://www.w3.org/2000/svg"
                viewBox="0 0 24 24"
                fill="none"
                stroke="#F9F6EE"
                stroke-width="2"
                stroke-linecap="round"
                stroke-linejoin="round"
                className="lucide lucide-x xl:w-[100px] lg:w-[100px] xl:h-[100px] lg:h-[100px] w-[60px] h-[60px]"
              >
                <path d="M18 6 6 18" />
                <path d="m6 6 12 12" />
              </svg>
            </div>
            <div className="absolute top-0 z-20 pt-10 pl-10 text-white">
              <h1
                className={`xl:text-9xl text-7xl md:text-9xl ml-1 xl:ml-0 md:xl-0 ${fontTitle.className}`}
              >
                KKN
              </h1>
              <h1
                className={`xl:text-2xl text-sm md:text-xl pl-2 md:pl-3 ${font.className}`}
              >
                Kopi Kaya Nusantara
              </h1>
            </div>
            <div
              className={`top-[35%] left-0 z-20 absolute text-white pt-10 pl-10 xl:p-10 md:p-10 text-left xl:text-6xl text-4xl md:text-6xl  ${fontTitle.className}`}
            >
              <h1 className="hover:cursor-pointer hover:scale-[103%] transition-transform" onClick={e => {
                e.preventDefault()
                setIsOpen(false)
                router.push('#aboutUs')
              }}>
                About Us
              </h1>
              <h1 className="my-7 hover:cursor-pointer hover:scale-[103%] transition-transform">
                Products
              </h1>
              <h1 className="hover:cursor-pointer hover:scale-[103%] transition-transform">
                Galeries
              </h1>
            </div>
          </>
        ) : (
          <div
            className="absolute top-0 right-0 z-20 lg:p-10 xl:p-10 xl:mr-10 lg:mr-10 hover:cursor-pointer"
            onClick={(e) => {
              e.preventDefault();
              setIsOpen(true);
            }}
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              style={{ transform: "rotate(270deg)" }}
              width="100"
              height="100"
              viewBox="0 0 24 24"
              fill="none"
              stroke="#F9F6EE"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"
              className="lucide lucide-tally-3"
            >
              <path d="M4 4v16" />
              <path d="M9 4v16" />
              <path d="M14 4v16" />
            </svg>
          </div>
        )}

        {isOpen && (
          <div className="absolute top-0 left-0 w-[100%] h-[100%] bg-black bg-opacity-70 z-0"></div>
        )}
        <div className={`top-[101vh] absolute grid grid-rows-2 grid-flow-col gap-2${font.className}`} >
          <div className="flex flex-col justify-center items-center p-10 mt-[10%] gap-10 w-full " id="aboutUs">
            <Image
              src={"/kopi1.jpeg"}
              alt="jpg"
              width={600}
              height={600}
              quality={100}
              className="flex items-center justify-center shadow-lg outline"
            />
          </div>
          <div>
            <h1 className={`mb-10 text-6xl font-bold text-center underline ${font.className}`}>About Us</h1>
            <p className={`text-justify text-lg xl:mx-[15%] lg:mx-[15%] mx-[5%] ${font.className}`}>
              Gayo Permata Coffee is growing well in Permata sub-district, Bener
              Meriah Regency, Aceh Province. Permata is frequently called as
              wilayah selimut kabut (foggy place) because the place is located
              along the hillside of geureudong mountain which is fertile area
              for agricultural activities. The experience of our farmers has
              been passed from generation to generation for decades. Currently,
              our coffee processing is held by the second generation to the
              third generation. This legacy makes us want to contribute directly
              to the world market, keep coffee sustainable, and have a good
              impact on humans and the environment This long experience, then
              supported by the strong and complex character of Gayo coffee has
              made our coffee well received in several countries in Asia,
              America and Europe in a sustainable manner.
            </p>
          </div>
        </div>
      </div>
    </>
  );
};

export default Index;
